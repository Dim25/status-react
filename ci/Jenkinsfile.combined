pipeline {
  agent { label 'master' }

  options {
    disableConcurrentBuilds()
    buildDiscarder(logRotator(
      numToKeepStr: '10',
      daysToKeepStr: '30',
      artifactNumToKeepStr: '10',
    ))
  }
  
  stages {
    stage('Build') {
      parallel {
        stage('iOS') {
          steps { script {
            ios = build('status-react/combined/mobile-ios')
          } }
        }
        stage('Android') {
          steps { script {
            dro = build('status-react/combined/mobile-android')
          } }
        }
        stage('MacOS') {
          steps { script {
            osx = build('status-react/combined/desktop-macos')
          } }
        }
        stage('Linux') {
          steps { script {
            nix = build('status-react/combined/desktop-linux')
          } }
        }
      }
    }
    stage('Archive') {
      steps {
        sh('rm -f pkg/*')
        copyArtifacts(
          projectName: 'status-react/combined/mobile-ios', target: 'pkg',
          flatten: true, selector: specific("${ios.number}")
        )
        copyArtifacts(
          projectName: 'status-react/combined/mobile-android', target: 'pkg',
          flatten: true, selector: specific("${dro.number}")
        )
        copyArtifacts(
          projectName: 'status-react/combined/desktop-macos', target: 'pkg',
          flatten: true, selector: specific("${osx.number}")
        )
        copyArtifacts(
          projectName: 'status-react/combined/desktop-linux', target: 'pkg',
          flatten: true, selector: specific("${nix.number}")
        )
        archiveArtifacts('pkg/*')
      }
    }
    stage('Notify') {
      steps {
        slackSend(
          message: "Combined Nightly build success! (develop)",
          color: 'good'
        )
      }
    }
    //stage('Upload') {
    //  TODO
    //}
    //stage('Publish') {
    //  build(
    //    job: 'misc/status-im.github.io-update_env',
    //    parameters: [
    //      [name: 'APK_URL', value: apkUr, $class: 'StringParameterValue'l],
    //      [name: 'IOS_URL', value: ipaUr, $class: 'StringParameterValue'l],
    //      [name: 'DMG_URL', value: dmgUr, $class: 'StringParameterValue'l],
    //      [name: 'NIX_URL', value: appUr, $class: 'StringParameterValue'l]
    //    ]
    //  )
    //}
  }
}
